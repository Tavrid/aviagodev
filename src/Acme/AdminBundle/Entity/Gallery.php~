<?php
/**
 * Created by PhpStorm.
 * User: root
 * Date: 27.03.14
 * Time: 10:40
 */

namespace Acme\AdminBundle\Entity;
use Acme\CoreBundle\Entity\AbstractEntity;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Mapping\ClassMetadata;
use Doctrine\Common\Collections\ArrayCollection;

use Doctrine\ORM\Event\PreUpdateEventArgs;
use Acme\CoreBundle\Model\Position;
use Doctrine\ORM\Event\LifecycleEventArgs;

class Gallery extends  AbstractEntity{

    /**
     * @var integer
     */
    protected  $id;
    /**
     * @var string
     */
    protected $name;
    /**
     * @var string

     *
     */
    protected $desc;


    /**
     * @var boolean
     */
    protected $isShow;
    /**
     * @var int
     */
    protected $position = 1;

    /**
     * @var ArrayCollection
     */
    protected $media;





    public function preUpdate(PreUpdateEventArgs $args) {
        $changes = $args -> getEntityChangeSet();
        if (isset($changes['position'])) {
            $positionObj = new Position($args -> getEntityManager(), $this);
            $position = (isset($changes['position'][0])) ? $changes['position'][0] : $this -> getPosition();
            $toPosition = $args -> getEntity() -> getPosition();
            $positionObj -> insertPosition($position, $toPosition);
        }

    }

    public function postPersist(LifecycleEventArgs $args) {
        $positionObj = new Position($args -> getEntityManager(), $this);
        $positionObj -> insertPosition(-156, 1);
    }

    public function postRemove(LifecycleEventArgs $args) {
        $positionObj = new Position($args -> getEntityManager(), $this);
        $positionObj -> removePosition($this->getPosition());
    }
}
